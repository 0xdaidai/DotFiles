SpaceVim
○快速编辑
<space>xa{char}：根据char对齐
<space>xc：计算选中区域字符数
<space>xj{c|l|r}：居中|左|右对齐该段落
<space>xdw：删除后缀空白符
[e：将该行上移
]e：将该行下移
[<space>：上方添加空行
]<space>：下方添加空行
<space>cl：切换该行注释状态
<space>cL：注释该行
<space>cp：切换该段落注释状态
<space>cP：注释该段落
<s-return>：下行编辑(insert)
<space>iu：搜索并插入unicode
<leader>tt：快速自动制表
<leader>tm：制表编辑模式
<c-c>：复制当时文件绝对路径

○界面
<F2>：开关Tagbar
<F3>：开关Defx
<F4>：开关Mundo
<leader>q：quickfix窗口操作前缀
<space>a：vim工具插件前缀
<space>wc：阅读模式

○搜索
<leader>fr：重置上次搜索
<leader>f<space>：搜索快捷键并执行
<leader>fp：搜索插件信息
<leader>fh：搜索vim帮助文档
<leader>fq：搜索quickfix
<leader>fl：搜索locationlist
<leader>fm：搜索vim的输出信息并复制
<leader>fy：搜索"寄存器历史并复制
<leader>fj：搜索跳转表并跳转
<leader>ff：搜索函数(尾缀F全局)
<leader>ft：搜寻符号(尾缀T全局)
<leader>fg：利用gtags搜寻标识符
<leader>for：搜索最近打开文件
<leader>fod：搜索当前目录文件
<leader>fof：搜索指定目录
<leader>fop：搜索当时工程目录文件
▪注：以下模式搜索尾缀大写即快速搜索光标单词
<space>ss：搜索当前缓冲区
<space>sb：搜索所有缓冲区
<space>sd：搜索当前目录
<space>sf：搜索指定目录
<space>sp：搜索工程目录
<space>sj：后台搜索工程目录
<space>lt：打开上次后台搜索结果

○跳转
<space>jw：跳转至某单词
<space>jl：跳转至某行
<space>ju：跳转至某URL
;{char}{char}：跳转至指定字符处
f/F：智能升级版的f/F
gd：跳转定义(leaderf)
gr：跳转引用(leaderf)
gs：跳转无定义的引用(leaderf)
go：跳转声明或定义(ycm)
<space>en：跳转下一个语法检测提示
<space>eb：跳转上一个语法检测提示
<space>el：打开语法检测列表

○标签
<space>mm：切换标签状态
<space>mi：注释标签
<space>mn：跳转至下一个标签
<space>mb：跳转至上一个标签
<space>ma：列出所有标签
○编译运行
<space>lr：快速运行程序
<space>li：开关输入窗口
<space>ld：只编译用于gdb调试
<space>lc：优化编译
○Defx
<left>：关闭目录
<right>：展开目录
p：预览文件
yy：复制文件路径
yY：复制文件内容

基础概念
○窗口：
●设置窗口：
所有窗口等高等宽：<c-w>=
减少/增加高度：<c-w>-、<c-w>+
减少/增加宽度：<c-w><、<c-w>>
设置高度/宽度 ：{高}<c-w>_ 、{宽}<c-w>|
●操作窗口：
<c-w>c：:close
<c-w>o：:only
<c-w>s：:sp
<c-w>v：:vs
●扩展
<space>{numr}
<tab>
<s-tab>
<c-right> <c-left> <c-up> <c-down> 

○标签页：
●常用命令
:tabe，:tabn，:tabp，:tabd
●扩展
[t
]t

○缓冲区：
●类型概念
已激活、已列出、已载入、未命名
●查看：:ls
%当前/#轮换
a激活/h隐藏/u未列
=只读/+已更改
●常用命令
:ene，:e，:bd，:qa，:wa，:wqa，:saveas
●参数列表
:args，:arga，:argd，:argdo
●扩展
<leader>n
<leader>b
<leader>{numr}
<c-s>
<c-w>x
<c-w>X
<c-w>W
<space>bNn

○插入模式
●进入：
i，a，I，A，o，O
●操作：
<c-o>：暂入普通模式
<c-r>{reg}：粘贴寄存器
●扩展
<c-a>  <c-e>  <c-d>  <c-b>  <c-u>  <c-k>  <c-]>

○可视模式：
●进入：
v，^V
●移动：
o：到对角线端点
O：块选取模式下，到同行的另一个端点
●全行插入：
I/A：块选取模式下，插入到选取块的左/右
●扩展
<leader>y
<leader>p

○替换模式
●进入：
R
●退出：
<Esc>

○命令模式
●进入：:
●外部命令：!cmd
利用:r与:w，将外部命令I/O重定向到该缓冲区
●外部过滤：{范围}!cmd
将外部命令的I/O同时重定向到目标指定区域
●常用命令
▪:g/pat/cmd：:g!表示不匹配的行，默认范围%
▪:s/pat/rel/flag：默认范围.
s_flags：e不报错，g全替换，i忽略大小写，
普通模式中&可重复上次:s命令
▪:r/w：范围表示read到范围行后，write指定范围
▪:X：设置密码，为空解除

○普通模式
●复合操作：
d，c，y
●光标移动：
0，^，$，w，W，b，B，e，f，F，%，)，}，gg，G
●文本对象：前缀(i|a)
w，s，p，(，{，[，<，"，'，`
扩展：e，l，i，f，,
●删除：
x，s，D，C，dd，S
●修改：
r，~，gu，gU，J，p，P，u，<c-r>
●换页：
^F，^D，^E，^B，^U，^Y
●扩展：
复制：Y，<c-y>，,
修改宏：<leader>m<leader>m
<leader>h：nohl
<leader>l：linebreak
<leader>w：wrap
<leader>v：virtualedit
<leader>a：ambiwidth
<leader>te：tabexpand

○范围
●先输入数字后再键入:冒号
●%：整个文件
●0：第一行行前
●$：最后一行
● .：当前行
● -/+n：当前行前/后n行
● 'm：标签行
●/^foo/+1：模式匹配行
●/foo//bar//quux/：多次模式匹配行
●?^$?+1：前向匹配行

○寄存器
●查看：:reg
●使用：" + □ + y/p
●寄存器：
用户：a-z和A-Z（大写用来向寄存器添加）
系统：*(选择区) 和 +(剪切板)
只读：%文件、. 修改、: 命令、/搜索
数字：0为最近一次复制，1-9最近1-9次删除

○宏录制
●录制：q+□+操作+q
●使用：@+□，@@
●特殊：. 执行上次的单次修改操作

○标记与跳转
●查看：:marks 与 :jumps
●标记：m + 字母
●跳转：' + 标记
●标记：
用户：字母（大写全局）
上次跳转：'
上次修改：.
上次修改或复制：[或]
上次插入：^
上次关闭："
返回较旧跳转：<c-o>（全局）
返回较新跳转：<c-i>（全局）

○临时文件
●swap文件
set noswapfile
●backup文件
set nobackup
●undo文件
set undofile
set undodir=$HOME/.vim/undo
●viminfo文件
set viminfo='100,<50,s10,h,n$HOME/.vim/viminfo
set history=1000
保存标记文件数、寄存器保存行数、寄存器最大字节、启动时关闭hlsearch、viminfo文件名、搜索/命令/输入历史
●session文件
:makesession mysession.vim
:source mysession.vim
进阶操作
○特殊字符：
<c-v>{key}
<c-v>{字符编码}：0，x，u，U
<c-k>{二合字符}
查看：:digraphs，ga，g8

○快速查找
●*和#：当前单词，前向和后向
●/和?：正向和反向正则匹配
●K：快速查找help

○代码缩进
●配置：
filetype indent on：自适应不同语言缩进
set autoindent：基于上行缩进
set expandtab：空格代替tab，:retab恢复本行tab
set tabstop=8：默认的tab宽，不足则为空格
set softtabstop=4：键入的tab宽
set shiftwidth=4：缩进的tab宽

○代码折叠
●配置
set foldmethod=syntax|indent：基于语法折叠
set nofoldenable：启动vim时不开启折叠
●常用命令：
za：切换折叠状态
zM：折叠所有代码
zR：取消所有折叠

○基于Tags跳转
●配置：
set tags=./.tags;,.tags
●操作：
^}：直接本窗口跳转
^W } ：打开preview窗口跳转
g]：显示跳转选项

○基于Cscope跳转
●配置：
cs add ~/Projects/.cscope.out
set nocst
set cscopequickfix=
set csre
●操作
cs find s/g/d/c/a 符号

○文件跳转
●配置：
set path= ：vim搜寻文件名，**表示递归搜索
●操作：
gf ：还可下载URL

配置
○runtimepath目录结构
●查看：:scriptnames
●:filetype plugin indent on
加载filetype.vim与script.vim：/ftdetect/*.vim
加载ftplugin.vim：/ftplugin/
加载indent.vim：/indent/*.vim
●:syntax enable，:syntax on
加载/syntax/*.vim
●:set loadplugins
加载/plugin/*.vim
●:set packpath=，:packadd，:helptags doc/
/pack/foo/start/bar/类vim目录/
/pack/foo/opt/bar/类vim目录/
●/autoload/*.vim
存放自动载入的函数，调用时使用
:call dirname(#.*)*#filename#funcname()
●/ftplugin/
<filetype>.vim
<filetype>_<name>.vim
<filetype>/<name>.vim
VIM插件开发
○命令别名
●形式：:command oldcmd Newcmd
●参数：-nargs=0/1/*/?/+ 
<args>：用命令别名的参数代替该位置
<q-args>："str \'str\' "
<f-args>："str","str"
●默认范围：-range/-range=%
○自动命令
●形式：
:autocmd [group] {events} {file_pattern} [nested] {command}
●查询：不加{command}
○键映射
●映射按键若局部冲突会导致vim等待
●映射<leader>：let mapleader="\\"
●禁用映射：映射到<nop>
●<silent>、<buffer>、<expr>

○变量
●变量作用域
g:var - 全局
a:var - 函数参数
l:var - 函数局部变量
b:var - buffer 局部变量
w:var - window 局部变量
t:var   - tab 局部变量
s:var - 当前脚本内可见的局部变量
v:var - Vim 预定义的内部变量
●$环境变量，&选项值
●整数：32为有符型，支持八/十/十六进制
●浮点数：支持科学记数法
●字符串：
NULL结尾，支持转义序列，且有" 与 ' 形式
用 . 连接字符串与变量替换
非零数字开头会转换为非零子串对应的数值，否则为0
●函数引用：大写首字母
●有序列表：[00，'10'，[20，21]]
●无序字典：{'key':'value'，}

○函数
●调用：
:call Func(args)
:echo Funcname(args)
let My=function("Func")，call(Myfunc，[])
●range：
a:firstline，a:lastline
●dict：
self：将函数引用装入字典，self指代该字典

○语句
●if语句
●for语句
●while语句
●try-catch语句

○特性
●foo_{val}_bar：先计算val后字符替换
